스프링 컨트롤러
    - 모든 클라이언트의 요청/응답은 컨트롤러가 관리
    - 컨트롤러 Annotation : @Controller
    - 스프링 컨트롤러 클래스 만들기
        [1] @Controller
            public class 클래스명{}

스프링 컨트롤러의 HTTP 매핑(연결) 메소드
    [1] @RequestMapping(value=" ", method=RequestMethod.HTTP메소드명)
        public void 메소드명(){}

        - value : 해당 메소드를 매핑할 HTTP주소 (IP PORT 생략 후 뒷부분)
        - method : RequestMethod.GET/POST/PUT/DELETE
    [2] @RequestParam

HTTP 데이터 ()받는 방법
    쿼리스트링 : URL?key=value&key2=value&key3=value
    [1] HttpServletRequest
        .getParameter("쿼리스트링매개변수 key값")

HTTP 데이터 ()응답 하는 방법
    [1] HttpServletResponse
        .getWriter().print("응답할데이터");
    [2] @ResponseBody
        return 데이터자료;    *메소드의 리턴타입 일치
        (2-1) 메소드 위에 @ResponseBody  : 해당 메소드의 반환 (자바)타입을 (HTTP) 타입으로 변환
        (2-2) 클래스 위에 @RestController : 해당하는 클래스내 모든 메소드는 @ResponseBody 생략해도 기능이 적용된다.

자바의 기본타입(int,float,boolean등등) 처럼 HTTP의 타입 존재
    HTTP Content-Type
        - HTTP의 타입중 application/json 존재
            - HTTP는 자바 타입을 지원 안한다.
            - 자바타입을 HTTP 타입으로 변환