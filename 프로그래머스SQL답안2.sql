# SUM, MAX, MIN

-- 가장 비싼 상품 구하기
SELECT MAX(PRICE) MAX_PRICE FROM PRODUCT;

-- 최댓값 구하기
SELECT MAX(DATETIME) AS 시간 FROM ANIMAL_INS;

-- 가격이 제일 비싼 식품의 정보 출력하기
SELECT * FROM FOOD_PRODUCT WHERE PRICE = (SELECT MAX(PRICE) FROM FOOD_PRODUCT);

-- 최솟값 구하기
SELECT MIN(DATETIME) 시간 FROM ANIMAL_INS;

-- 동물 수 구하기
SELECT COUNT(*) FROM ANIMAL_INS;

-- 중복 제거하기
SELECT COUNT(DISTINCT NAME) FROM ANIMAL_INS;

-- 조건에 맞는 아이템들의 가격의 총합 구하기
SELECT SUM(PRICE) TOTAL_PRICE FROM (SELECT PRICE FROM ITEM_INFO WHERE RARITY = "LEGEND") AS TEMP;

# 8. [SELECT] 조건에 맞는 회원수 구하기
SELECT COUNT(*) FROM USER_INFO WHERE AGE BETWEEN 20 AND 29 AND YEAR(JOINED) = 2021;

# 9. [SELECT] 잔챙이 잡은 수 구하기
SELECT COUNT(*) FISH_COUNT FROM FISH_INFO WHERE LENGTH IS NULL;

# 10. [SELECT] 특정 형질을 가지는 대장균 찾기
SELECT COUNT(*) COUNT FROM ECOLI_DATA WHERE GENOTYPE & 7 IN (1, 4, 5);

# 11. [GROUP BY]자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기
SELECT CAR_TYPE, COUNT(OPTIONS) CARS FROM CAR_RENTAL_COMPANY_CAR 
	WHERE OPTIONS LIKE "%열선시트%" OR 
		OPTIONS LIKE "%통풍시트%" OR 
        OPTIONS LIKE "%가죽시트%" 
	GROUP BY CAR_TYPE ORDER BY CAR_TYPE;

# 12. [GROUP BY]성분으로 구분한 아이스크림 총 주문량
SELECT INGREDIENT_TYPE, SUM(TOTAL_ORDER) TOTAL_ORDER 
	FROM FIRST_HALF NATURAL JOIN ICECREAM_INFO 
    GROUP BY INGREDIENT_TYPE ORDER BY TOTAL_ORDER;

# 13. [GROUP BY]진료과별 총 예약 횟수 출력하기
SELECT MCDP_CD '진료과코드', COUNT(*) '5월예약건수' FROM APPOINTMENT 
	WHERE YEAR(APNT_YMD) = 2022 AND MONTH(APNT_YMD) = 5 
    GROUP BY MCDP_CD ORDER BY COUNT(*), MCDP_CD;

# 14. [GROUP BY]고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, COUNT(*) count FROM ANIMAL_INS 
	GROUP BY ANIMAL_TYPE ORDER BY ANIMAL_TYPE;

# 15. [GROUP BY]동명 동물 수 찾기
SELECT NAME, COUNT(*) COUNT FROM ANIMAL_INS 
	GROUP BY NAME HAVING COUNT(NAME) > 1 
    ORDER BY NAME;

# 16. [GROUP BY]조건에 맞는 사원 정보 조회하기
SELECT SUM(SCORE) SCORE, EMP_NO, EMP_NAME, POSITION, EMAIL 
	FROM HR_EMPLOYEES NATURAL JOIN HR_GRADE 
	GROUP BY EMP_NO HAVING SCORE = 
    (SELECT SUM(SCORE) S FROM HR_GRADE GROUP BY EMP_NO ORDER BY S DESC LIMIT 1);

# 17. [GROUP BY]물고기 종류 별 잡은 수 구하기
SELECT COUNT(*) FISH_COUNT, FISH_NAME 
	FROM FISH_INFO I INNER JOIN FISH_NAME_INFO N ON I.FISH_TYPE = N.FISH_TYPE 
    GROUP BY FISH_NAME ORDER BY FISH_COUNT DESC;

# 18. [JOIN]상품 별 오프라인 매출 구하기
SELECT PRODUCT_CODE, SUM(SALES_AMOUNT*PRICE) SALES 
	FROM PRODUCT P INNER JOIN OFFLINE_SALE S ON P.PRODUCT_ID = S.PRODUCT_ID 
    GROUP BY PRODUCT_CODE ORDER BY SALES DESC, PRODUCT_CODE;
